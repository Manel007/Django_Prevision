# Generated by Django 4.2 on 2024-10-26 16:13

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('RessourceEntity', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Fournisseur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom du fournisseur')),
                ('type_fournisseur', models.CharField(choices=[('importateur', 'Importateur'), ('grossiste', 'Grossiste'), ('entreprise_prive', 'Entreprise Privée'), ('cooperative_agricole', 'Coopérative Agricole')], max_length=20, verbose_name='Type de fournisseur')),
                ('adresse', models.TextField(verbose_name='Adresse du fournisseur')),
                ('numero_telephone', models.CharField(max_length=15, verbose_name='Numéro de téléphone')),
            ],
        ),
        migrations.AddField(
            model_name='ressource',
            name='nom_ressource',
            field=models.CharField(default='Ressource par défaut', max_length=100, verbose_name='Nom de la ressource'),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='FournisseurRessource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite_disponible', models.FloatField(verbose_name='Quantité disponible')),
                ('fournisseur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='RessourceEntity.fournisseur')),
                ('ressource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='RessourceEntity.ressource')),
            ],
            options={
                'unique_together': {('fournisseur', 'ressource')},
            },
        ),
        migrations.AddField(
            model_name='fournisseur',
            name='ressources_fournies',
            field=models.ManyToManyField(through='RessourceEntity.FournisseurRessource', to='RessourceEntity.ressource', verbose_name='Ressources fournies'),
        ),
    ]
